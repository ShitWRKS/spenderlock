version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    ports:
      - "80:8080"
    environment:
      - APP_ENV=production
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=spenderlock
      - DB_USERNAME=spenderlock_user
      - DB_PASSWORD=spenderlock_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - storage_data:/var/www/html/storage
    networks:
      - spenderlock-network
    restart: unless-stopped

  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=spenderlock
      - POSTGRES_USER=spenderlock_user
      - POSTGRES_PASSWORD=spenderlock_password
      - POSTGRES_ROOT_PASSWORD=root_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spenderlock_user -d spenderlock"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - spenderlock-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - spenderlock-network
    restart: unless-stopped



volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  storage_data:
    driver: local

networks:
  spenderlock-network:
    driver: bridge
